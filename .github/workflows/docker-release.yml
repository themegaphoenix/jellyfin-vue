name: Docker stable release

on:
  release:
    types:
      - released
      - prereleased

jobs:
  ssr:
    name: Build SSR images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache node_modules
        uses: actions/cache@v2.1.4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Build client
        run: 'npm run build:standalone'

      - name: Configure QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push stable SSR images
        if: github.event.action == 'released'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm,linux/arm/v6
          file: '.github/workflows/Dockerfile.ssr'
          tags: |
            jellyfin/jellyfin-vue:stable
            jellyfin/jellyfin-vue:stable-ssr
            jellyfin/jellyfin-vue:stable-ssr.${{ github.event.release.tag_name }}
            jellyfin/jellyfin-vue:latest
            ghcr.io/jellyfin/jellyfin-vue:stable
            ghcr.io/jellyfin/jellyfin-vue:stable-ssr
            ghcr.io/jellyfin/jellyfin-vue:stable-ssr.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:latest

      - name: Build and push release candidate SSR images
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm,linux/arm/v6
          file: '.github/workflows/Dockerfile.ssr'
          tags: |
            jellyfin/jellyfin-vue:stable-rc-ssr
            jellyfin/jellyfin-vue:stable-rc-ssr.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:stable-rc-ssr
            ghcr.io/jellyfin/jellyfin-vue:stable-rc-ssr.${{ github.event.release.tag_name }}

  static:
    name: Build static images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache node_modules
        uses: actions/cache@v2.1.4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Build client
        run: 'npm run build:static'

      - name: Configure QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push stable static images
        if: github.event.action == 'released'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm,linux/arm/v6
          file: '.github/workflows/Dockerfile.nginx'
          tags: |
            jellyfin/jellyfin-vue:stable-static
            jellyfin/jellyfin-vue:stable-static.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:stable-static
            ghcr.io/jellyfin/jellyfin-vue:stable-static.${{ github.event.release.tag_name }}

      - name: Build and push release candidate static images
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm,linux/arm/v6
          file: '.github/workflows/Dockerfile.nginx'
          tags: |
            jellyfin/jellyfin-vue:stable-rc-static
            jellyfin/jellyfin-vue:stable-rc-static.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:stable-rc-static
            ghcr.io/jellyfin/jellyfin-vue:stable-rc-static.${{ github.event.release.tag_name }}
